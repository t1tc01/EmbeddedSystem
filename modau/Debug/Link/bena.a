;/*
; * bena.c
; *
; * Created: 10/2/2022 8:32:03 AM
; * Author: Hoang
; */
;
;#include <io.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#include <glcd.h>
;#include <font5x7.h>
;#include <stdio.h>
;#include <stdint.h>
;#include <stdlib.h>
;
;#define LEFT 4
;#define DOWN 5
;#define RIGHT 6
;#define UP 2
;#define PAUSE false
;#define BACKLIGHT A0
;#define MAX_WIDTH 84
;#define MAX_HEIGHT 48
;#define speakerPin A5
;
;// global var
;int keypad[3][3] = {1, 2, 3, 4, 5, 6, 7, 8, 9};

	.DSEG
;bool dl = false, dr = false, du = false, dd = false;
;int x[200], y[200], i, slength, tempx = 0, tempy = 0, xx, yy;
;unsigned int  score, high;
;int xegg , yegg;
;
;//setup begin
;void setup() {
; 0000 0022 void setup() {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0023     glcd_clear();
;PCODE: $0000000F VOL: 0
; 0000 0024     slength = 30;
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0025     score = 0;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0026     xegg = MAX_WIDTH / 2;
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0027     yegg = MAX_HEIGHT / 2;
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 0028     dr = true;
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 0029     dl = false;
;PCODE: $0000001A VOL: 0
; 0000 002A     du = false;
;PCODE: $0000001B VOL: 0
; 0000 002B     dd = false;
;PCODE: $0000001C VOL: 0
; 0000 002C     tempx = 0, tempy = 0;
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 002D     for (i = 0; i < slength; i++)
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 002E     {
; 0000 002F         x[i] = 10 + slength - i;
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 0030         y[i] = 10;
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 0031     }
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 0032 
; 0000 0033     glcd_setpixel(xegg, yegg);
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 0034 
; 0000 0035 
; 0000 0036 }
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;
;//matrix button processing
;int BUTTON() {
; 0000 0039 int BUTTON() {
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 003A     int result = -1;
; 0000 003B     char a;
; 0000 003C     int i,j;
; 0000 003D     for (j = 0; j < 3; j++) {  //Xet cot
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;	result -> R16,R17
;	a -> R19
;	i -> R20,R21
;	j -> Y+6
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 003E         if (j == 0) PORTF = 0b11111101; //1111 1101,
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 003F         if (j == 1) PORTF = 0b11110111; //1111 0111,
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 0040         if (j == 2) PORTF = 0b11011111; //1101 1111,
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 0041         for (i = 0; i < 3; i++) { // Xet hang
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0000 0042             if (i == 0) {
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0000 0043                 a = PINF&0x04;
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0000 0044                 if (a != 0x04) {
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0000 0045                    result = keypad[i][j];
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0000 0046                 }
; 0000 0047             }
;PCODE: $0000007E VOL: 0
; 0000 0048             if (i == 1) {
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
; 0000 0049                a = PINF&0x10;
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
; 0000 004A                if (a != 0x10) {
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0000 004B                   result = keypad[i][j];
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0000 004C                }
; 0000 004D             }
;PCODE: $00000091 VOL: 0
; 0000 004E 
; 0000 004F             if (i == 2) {
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
; 0000 0050                 a = PINF&0x01;
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
; 0000 0051                 if (a != 0x01) {
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
; 0000 0052                    result = keypad[i][j];
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
; 0000 0053                 }
; 0000 0054             }
;PCODE: $000000A4 VOL: 0
; 0000 0055         }
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
; 0000 0056     }
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
; 0000 0057     return result;
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
; 0000 0058 }
;PCODE: $000000B5 VOL: 0
;
;
;//
;void check_egg() {
; 0000 005C void check_egg() {
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
; 0000 005D      if (x[0] == xegg && y[0] == yegg){
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
; 0000 005E         score += 1;
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
; 0000 005F         slength += 3;
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
; 0000 0060         glcd_clrpixel(tempx, tempy);
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
; 0000 0061         xegg = rand() % 85 + 1;
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
; 0000 0062         yegg = rand() % 47 + 1;
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
; 0000 0063         glcd_setpixel(xegg, yegg);
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
; 0000 0064      }
; 0000 0065 }
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;
;//
;void draw_snake()
; 0000 0069 {
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
; 0000 006A    for (i = 0; i < slength; i++) {
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
; 0000 006B       glcd_setpixel(x[i], y[i]);
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
; 0000 006C       glcd_clrpixel(tempx, tempy);
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
; 0000 006D    }
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
; 0000 006E }
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;
;//
;void move_snake() {
; 0000 0071 void move_snake() {
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
; 0000 0072     if (!PAUSE) {
; 0000 0073         bool isEnd = false;
; 0000 0074         delay_ms(75);
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;	isEnd -> Y+0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
; 0000 0075         // auto move
; 0000 0076         if (dr == true) {
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
; 0000 0077             tempx = x[0] + 1;
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
; 0000 0078             tempy = y[0];
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
; 0000 0079         }
; 0000 007A         if (dl == true){
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
; 0000 007B             tempx = x[0] - 1;
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
; 0000 007C             tempy = y[0];
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
; 0000 007D         }
; 0000 007E         if (du == true){
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
; 0000 007F             tempx = x[0];
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
; 0000 0080             tempy = y[0] - 1;
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
; 0000 0081         }
; 0000 0082         if (dd == true){
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
; 0000 0083             tempx = x[0];
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
; 0000 0084             tempy = y[0] + 1;
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
; 0000 0085         }
; 0000 0086 
; 0000 0087 
; 0000 0088         for (i = 1; i < slength; i++) {
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
; 0000 0089             if (x[i] == x[0] && y[i] == y[0]) {
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
; 0000 008A                 delay_ms(500);
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
; 0000 008B                 isEnd = true;
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
; 0000 008C                 setup();
;PCODE: $00000152 VOL: 0
; 0000 008D             }
; 0000 008E         }
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
; 0000 008F         check_egg();
;PCODE: $0000015A VOL: 0
; 0000 0090 
; 0000 0091         //
; 0000 0092         if (tempx <= 0)
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
; 0000 0093         {
; 0000 0094             tempx = 84 + tempx;
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
; 0000 0095         }
; 0000 0096         if (tempx >= 84)
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
; 0000 0097         {
; 0000 0098             tempx = tempx - 84;
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
; 0000 0099         }
; 0000 009A         if (tempy <= 0)
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
; 0000 009B         {
; 0000 009C             tempy = 48 + tempy;
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
; 0000 009D         }
; 0000 009E         if (tempy >= 48)
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
; 0000 009F         {
; 0000 00A0             tempy = tempy - 48;
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
; 0000 00A1         }
; 0000 00A2 
; 0000 00A3         if (!isEnd) {
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
; 0000 00A4             for (i = 0; i < slength; i++)
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
; 0000 00A5                 {
; 0000 00A6                     xx = x[i];
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
; 0000 00A7                     yy = y[i];
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
; 0000 00A8                     x[i] = tempx;
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
; 0000 00A9                     y[i] = tempy;
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
; 0000 00AA                     tempx = xx;
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
; 0000 00AB                     tempy = yy;
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
; 0000 00AC                 }
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
; 0000 00AD         }
; 0000 00AE 
; 0000 00AF 
; 0000 00B0         draw_snake();
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
; 0000 00B1 
; 0000 00B2     }
;PCODE: $000001A5 VOL: 0
; 0000 00B3 }
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
;
;
;
;//
;void direct(int phim) {
; 0000 00B8 void direct(int phim) {
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
; 0000 00B9     if (phim == DOWN && (dr == true || dl == true))
;PCODE: $000001AB VOL: 0
;	phim -> Y+0
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
;PCODE: $000001BA VOL: 0
; 0000 00BA     {
; 0000 00BB         dr = false;
;PCODE: $000001BB VOL: 0
; 0000 00BC         dl = false;
;PCODE: $000001BC VOL: 0
; 0000 00BD         du = false;
;PCODE: $000001BD VOL: 0
; 0000 00BE         dd = true;
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
; 0000 00BF         tempx = x[0]; //Save the new coordinates of head in tempx,tempy
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
; 0000 00C0         tempy = y[0] + 1;
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
; 0000 00C1     }
; 0000 00C2     if (phim == UP && (dr == true || dl == true)) {
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
; 0000 00C3         dr = false;
;PCODE: $000001D5 VOL: 0
; 0000 00C4         dl = false;
;PCODE: $000001D6 VOL: 0
; 0000 00C5         du = true;
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
; 0000 00C6         dd = false;
;PCODE: $000001D9 VOL: 0
; 0000 00C7         tempx = x[0]; //Save the new coordinates of head in tempx,tempy
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
; 0000 00C8         tempy = y[0] - 1;
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
;PCODE: $000001DE VOL: 0
; 0000 00C9     }
; 0000 00CA     if (phim == LEFT && (dd == true || du == true)) {
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
;PCODE: $000001EA VOL: 0
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
; 0000 00CB         dr = false;
;PCODE: $000001EF VOL: 0
; 0000 00CC         dl = true;
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
; 0000 00CD         du = false;
;PCODE: $000001F2 VOL: 0
; 0000 00CE         dd = false;
;PCODE: $000001F3 VOL: 0
; 0000 00CF         tempx = x[0]-1; //Save the new coordinates of head in tempx,tempy
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
; 0000 00D0         tempy = y[0];
;PCODE: $000001F7 VOL: 0
;PCODE: $000001F8 VOL: 0
; 0000 00D1     }
; 0000 00D2     if (phim == RIGHT && (dd == true || du == true))
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
;PCODE: $000001FC VOL: 0
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
;PCODE: $00000201 VOL: 0
;PCODE: $00000202 VOL: 0
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
;PCODE: $00000205 VOL: 0
;PCODE: $00000206 VOL: 0
;PCODE: $00000207 VOL: 0
;PCODE: $00000208 VOL: 0
; 0000 00D3     {
; 0000 00D4         dr = true;
;PCODE: $00000209 VOL: 0
;PCODE: $0000020A VOL: 0
; 0000 00D5         dl = false;
;PCODE: $0000020B VOL: 0
; 0000 00D6         du = false;
;PCODE: $0000020C VOL: 0
; 0000 00D7         dd = false;
;PCODE: $0000020D VOL: 0
; 0000 00D8         tempx = x[0] + 1; //Save the new coordinates of head in tempx,tempy
;PCODE: $0000020E VOL: 0
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
; 0000 00D9         tempy = y[0];
;PCODE: $00000211 VOL: 0
;PCODE: $00000212 VOL: 0
; 0000 00DA     }
; 0000 00DB }
;PCODE: $00000213 VOL: 0
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
;//main
;void main(void)
; 0000 00DE {
;PCODE: $00000217 VOL: 0
; 0000 00DF GLCDINIT_t glcd_init_data;
; 0000 00E0 glcd_init_data.font = font5x7;
;PCODE: $00000218 VOL: 0
;	glcd_init_data -> Y+0
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
; 0000 00E1 glcd_init_data.readxmem=NULL;
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
; 0000 00E2 glcd_init_data.writexmem=NULL;
;PCODE: $0000021D VOL: 0
;PCODE: $0000021E VOL: 0
; 0000 00E3 glcd_init_data.temp_coef=160;
;PCODE: $0000021F VOL: 0
;PCODE: $00000220 VOL: 0
;PCODE: $00000221 VOL: 0
;PCODE: $00000222 VOL: 0
; 0000 00E4 glcd_init_data.bias=6;
;PCODE: $00000223 VOL: 0
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
;PCODE: $00000226 VOL: 0
; 0000 00E5 glcd_init_data.vlcd=46;
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
;PCODE: $00000229 VOL: 0
;PCODE: $0000022A VOL: 0
; 0000 00E6 glcd_init(&glcd_init_data);
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
; 0000 00E7 
; 0000 00E8 DDRD = 0xFF;
;PCODE: $0000022D VOL: 0
;PCODE: $0000022E VOL: 0
; 0000 00E9 PORTD = 0xB6;
;PCODE: $0000022F VOL: 0
;PCODE: $00000230 VOL: 0
; 0000 00EA DDRF = 0b11101010;
;PCODE: $00000231 VOL: 0
;PCODE: $00000232 VOL: 0
; 0000 00EB PORTF = 0b00010101;
;PCODE: $00000233 VOL: 0
;PCODE: $00000234 VOL: 0
; 0000 00EC 
; 0000 00ED setup();
;PCODE: $00000235 VOL: 0
; 0000 00EE while (1)
;PCODE: $00000236 VOL: 0
; 0000 00EF     {
; 0000 00F0         // Please write your application code here
; 0000 00F1         int phim = BUTTON();
; 0000 00F2         direct(phim);
;PCODE: $00000237 VOL: 0
;	glcd_init_data -> Y+2
;	phim -> Y+0
;PCODE: $00000238 VOL: 0
;PCODE: $00000239 VOL: 0
;PCODE: $0000023A VOL: 0
;PCODE: $0000023B VOL: 0
; 0000 00F3         move_snake();
;PCODE: $0000023C VOL: 0
; 0000 00F4     }
;PCODE: $0000023D VOL: 0
;PCODE: $0000023E VOL: 0
;PCODE: $0000023F VOL: 0
; 0000 00F5 }
;PCODE: $00000240 VOL: 0
;PCODE: $00000241 VOL: 0
;PCODE: $00000242 VOL: 0
;PCODE: $00000243 VOL: 0
