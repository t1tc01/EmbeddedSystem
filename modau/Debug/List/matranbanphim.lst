
AVRASM ver. 2.1.30  C:\Users\Hoang PC\Desktop\htn\modau\Debug\List\matranbanphim.asm Sun Oct 02 08:30:19 2022

C:\Users\Hoang PC\Desktop\htn\modau\Debug\List\matranbanphim.asm(1090): warning: Register r5 already defined by the .DEF directive
C:\Users\Hoang PC\Desktop\htn\modau\Debug\List\matranbanphim.asm(1091): warning: Register r4 already defined by the .DEF directive
C:\Users\Hoang PC\Desktop\htn\modau\Debug\List\matranbanphim.asm(1092): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega128
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 1024 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega128
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4096
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF __lcd_x=R5
                 	.DEF __lcd_y=R4
                 	.DEF __lcd_maxx=R7
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 006b 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 _tbl10_G100:
000046 2710
000047 03e8
000048 0064
000049 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00004a 0001      	.DB  0x1,0x0
                 _tbl16_G100:
00004b 1000
00004c 0100
00004d 0010
00004e 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x3:
00004f 0001
000050 0002
000051 0003
000052 0004      	.DB  0x1,0x0,0x2,0x0,0x3,0x0,0x4,0x0
000053 0005
000054 0006
000055 0007
000056 0008      	.DB  0x5,0x0,0x6,0x0,0x7,0x0,0x8,0x0
C:\Users\Hoang PC\Desktop\htn\modau\Debug\List\matranbanphim.asm(1146): warning: .cseg .db misalignment - padding zero byte
000057 0009      	.DB  0x9
                 _0x0:
000058 7525
C:\Users\Hoang PC\Desktop\htn\modau\Debug\List\matranbanphim.asm(1148): warning: .cseg .db misalignment - padding zero byte
000059 0000      	.DB  0x25,0x75,0x0
                 _0x2020060:
C:\Users\Hoang PC\Desktop\htn\modau\Debug\List\matranbanphim.asm(1150): warning: .cseg .db misalignment - padding zero byte
00005a 0001      	.DB  0x1
                 _0x2020000:
00005b 4e2d
00005c 4e41
00005d 4900
00005e 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\Hoang PC\Desktop\htn\modau\Debug\List\matranbanphim.asm(1153): warning: .cseg .db misalignment - padding zero byte
00005f 0000      	.DB  0x0
                 _0x2040003:
000060 c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
000061 0011      	.DW  0x11
000062 0500      	.DW  _keypad
000063 009e      	.DW  _0x3*2
                 
000064 0001      	.DW  0x01
000065 0522      	.DW  __seed_G101
000066 00b4      	.DW  _0x2020060*2
                 
000067 0002      	.DW  0x02
000068 0526      	.DW  __base_y_G102
000069 00c0      	.DW  _0x2040003*2
                 
                 _0xFFFFFFFF:
00006a 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00006b 94f8      	CLI
00006c 27ee      	CLR  R30
00006d bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00006e e0f1      	LDI  R31,1
00006f bff5      	OUT  MCUCR,R31
000070 bfe5      	OUT  MCUCR,R30
000071 93e0 006c 	STS  XMCRB,R30
                 
                 ;CLEAR R2-R14
000073 e08d      	LDI  R24,(14-2)+1
000074 e0a2      	LDI  R26,2
000075 27bb      	CLR  R27
                 __CLEAR_REG:
000076 93ed      	ST   X+,R30
000077 958a      	DEC  R24
000078 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000079 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00007a e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00007b e0a0      	LDI  R26,LOW(__SRAM_START)
00007c e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
00007d 93ed      	ST   X+,R30
00007e 9701      	SBIW R24,1
00007f f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000080 ece2      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000081 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000082 9185      	LPM  R24,Z+
000083 9195      	LPM  R25,Z+
000084 9700      	SBIW R24,0
000085 f061      	BREQ __GLOBAL_INI_END
000086 91a5      	LPM  R26,Z+
000087 91b5      	LPM  R27,Z+
000088 9005      	LPM  R0,Z+
000089 9015      	LPM  R1,Z+
00008a 01bf      	MOVW R22,R30
00008b 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00008c 9005      	LPM  R0,Z+
00008d 920d      	ST   X+,R0
00008e 9701      	SBIW R24,1
00008f f7e1      	BRNE __GLOBAL_INI_LOOP
000090 01fb      	MOVW R30,R22
000091 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
000092 bf8b      	OUT  RAMPZ,R24
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000093 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000094 bfed      	OUT  SPL,R30
000095 e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000096 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000097 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000098 e0d5      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000099 940c 00ec 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x500
                 
                 	.CSEG
                 ;/*
                 ; * matranbanphim.c
                 ; *
                 ; * Created: 10/2/2022 7:59:05 AM
                 ; * Author: Hoang
                 ; */
                 ;
                 ;#include <io.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <stdio.h>
                 ;#include <stdint.h>
                 ;#include <stdlib.h>
                 ;#include <alcd.h>
                 ;
                 ;int keypad[3][3] = {1, 2, 3, 4, 5, 6, 7, 8, 9};
                 
                 	.DSEG
                 ;char data[16];
                 ;void BUTTON() {
                 ; 0000 0011 void BUTTON() {
                 
                 	.CSEG
                 _BUTTON:
                 ; .FSTART _BUTTON
                 ; 0000 0012     char a;
                 ; 0000 0013     int i,j;
                 ; 0000 0014     for (j = 0; j < 3; j++) {
00009b 940e 03e8 	CALL __SAVELOCR6
                 ;	a -> R17
                 ;	i -> R18,R19
                 ;	j -> R20,R21
                +
00009d e040     +LDI R20 , LOW ( 0 )
00009e e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0x5:
                +
00009f 3043     +CPI R20 , LOW ( 3 )
0000a0 e0e0     +LDI R30 , HIGH ( 3 )
0000a1 075e     +CPC R21 , R30
                 	__CPWRN 20,21,3
0000a2 f00c      	BRLT PC+2
0000a3 c044      	RJMP _0x6
                 ; 0000 0015         if (j == 0) PORTF = 0b11111101;
0000a4 2e04      	MOV  R0,R20
0000a5 2a05      	OR   R0,R21
0000a6 f419      	BRNE _0x7
0000a7 efed      	LDI  R30,LOW(253)
0000a8 93e0 0062 	STS  98,R30
                 ; 0000 0016         if (j == 1) PORTF = 0b11110111;
                 _0x7:
0000aa e0e1      	LDI  R30,LOW(1)
0000ab e0f0      	LDI  R31,HIGH(1)
0000ac 17e4      	CP   R30,R20
0000ad 07f5      	CPC  R31,R21
0000ae f419      	BRNE _0x8
0000af efe7      	LDI  R30,LOW(247)
0000b0 93e0 0062 	STS  98,R30
                 ; 0000 0017         if (j == 2) PORTF = 0b11011111;
                 _0x8:
0000b2 e0e2      	LDI  R30,LOW(2)
0000b3 e0f0      	LDI  R31,HIGH(2)
0000b4 17e4      	CP   R30,R20
0000b5 07f5      	CPC  R31,R21
0000b6 f419      	BRNE _0x9
0000b7 edef      	LDI  R30,LOW(223)
0000b8 93e0 0062 	STS  98,R30
                 ; 0000 0018         for (i = 0; i < 3; i++) {
                 _0x9:
                +
0000ba e020     +LDI R18 , LOW ( 0 )
0000bb e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0xB:
                +
0000bc 3023     +CPI R18 , LOW ( 3 )
0000bd e0e0     +LDI R30 , HIGH ( 3 )
0000be 073e     +CPC R19 , R30
                 	__CPWRN 18,19,3
0000bf f52c      	BRGE _0xC
                 ; 0000 0019             if (i == 0) {
0000c0 2e02      	MOV  R0,R18
0000c1 2a03      	OR   R0,R19
0000c2 f439      	BRNE _0xD
                 ; 0000 001A                 a = PINF&0x04;
0000c3 b1e0      	IN   R30,0x0
0000c4 70e4      	ANDI R30,LOW(0x4)
0000c5 2f1e      	MOV  R17,R30
                 ; 0000 001B                 if (a != 0x04) {
0000c6 3014      	CPI  R17,4
0000c7 f011      	BREQ _0xE
                 ; 0000 001C                     lcd_gotoxy(0, 0);
0000c8 940e 035e 	CALL SUBOPT_0x0
                 ; 0000 001D                     sprintf(data, "%u", keypad[i][j]);
                 ; 0000 001E                     lcd_puts(data);
                 ; 0000 001F                     delay_ms(500);
                 ; 0000 0020                 }
                 ; 0000 0021             }
                 _0xE:
                 ; 0000 0022             if (i == 1) {
                 _0xD:
0000ca e0e1      	LDI  R30,LOW(1)
0000cb e0f0      	LDI  R31,HIGH(1)
0000cc 17e2      	CP   R30,R18
0000cd 07f3      	CPC  R31,R19
0000ce f439      	BRNE _0xF
                 ; 0000 0023                a = PINF&0x10;
0000cf b1e0      	IN   R30,0x0
0000d0 71e0      	ANDI R30,LOW(0x10)
0000d1 2f1e      	MOV  R17,R30
                 ; 0000 0024                if (a != 0x10) {
0000d2 3110      	CPI  R17,16
0000d3 f011      	BREQ _0x10
                 ; 0000 0025                     lcd_gotoxy(0, 0);
0000d4 940e 035e 	CALL SUBOPT_0x0
                 ; 0000 0026                     sprintf(data, "%u", keypad[i][j]);
                 ; 0000 0027                     lcd_puts(data);
                 ; 0000 0028                     delay_ms(500);
                 ; 0000 0029                }
                 ; 0000 002A             }
                 _0x10:
                 ; 0000 002B 
                 ; 0000 002C             if (i == 2) {
                 _0xF:
0000d6 e0e2      	LDI  R30,LOW(2)
0000d7 e0f0      	LDI  R31,HIGH(2)
0000d8 17e2      	CP   R30,R18
0000d9 07f3      	CPC  R31,R19
0000da f439      	BRNE _0x11
                 ; 0000 002D                 a = PINF&0x01;
0000db b1e0      	IN   R30,0x0
0000dc 70e1      	ANDI R30,LOW(0x1)
0000dd 2f1e      	MOV  R17,R30
                 ; 0000 002E                 if (a != 0x01) {
0000de 3011      	CPI  R17,1
0000df f011      	BREQ _0x12
                 ; 0000 002F                     lcd_gotoxy(0, 0);
0000e0 940e 035e 	CALL SUBOPT_0x0
                 ; 0000 0030                     sprintf(data, "%u", keypad[i][j]);
                 ; 0000 0031                     lcd_puts(data);
                 ; 0000 0032                     delay_ms(500);
                 ; 0000 0033                 }
                 ; 0000 0034             }
                 _0x12:
                 ; 0000 0035         }
                 _0x11:
                +
0000e2 5f2f     +SUBI R18 , LOW ( - 1 )
0000e3 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0000e4 cfd7      	RJMP _0xB
                 _0xC:
                 ; 0000 0036     }
                +
0000e5 5f4f     +SUBI R20 , LOW ( - 1 )
0000e6 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
0000e7 cfb7      	RJMP _0x5
                 _0x6:
                 ; 0000 0037 }
0000e8 940e 03ef 	CALL __LOADLOCR6
0000ea 9626      	ADIW R28,6
0000eb 9508      	RET
                 ; .FEND
                 ;
                 ;void main(void)
                 ; 0000 003A {
                 _main:
                 ; .FSTART _main
                 ; 0000 003B DDRD = 0xFF;
0000ec efef      	LDI  R30,LOW(255)
0000ed bbe1      	OUT  0x11,R30
                 ; 0000 003C PORTD = 0xB6;
0000ee ebe6      	LDI  R30,LOW(182)
0000ef bbe2      	OUT  0x12,R30
                 ; 0000 003D lcd_init(16);
0000f0 e1a0      	LDI  R26,LOW(16)
0000f1 940e 0316 	CALL _lcd_init
                 ; 0000 003E DDRF = 0b11101010;
0000f3 eeea      	LDI  R30,LOW(234)
0000f4 93e0 0061 	STS  97,R30
                 ; 0000 003F PORTF = 0b00010101;
0000f6 e1e5      	LDI  R30,LOW(21)
0000f7 93e0 0062 	STS  98,R30
                 ; 0000 0040 
                 ; 0000 0041 while (1)
                 _0x13:
                 ; 0000 0042     {
                 ; 0000 0043     // Please write your application code here
                 ; 0000 0044       BUTTON();
0000f9 dfa1      	RCALL _BUTTON
                 ; 0000 0045       lcd_clear();
0000fa 940e 02e4 	CALL _lcd_clear
                 ; 0000 0046     }
0000fc cffc      	RJMP _0x13
                 ; 0000 0047 }
                 _0x16:
0000fd cfff      	RJMP _0x16
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
                 ; .FSTART _put_buff_G100
0000fe 93ba      	ST   -Y,R27
0000ff 93aa      	ST   -Y,R26
000100 931a      	ST   -Y,R17
000101 930a      	ST   -Y,R16
000102 81aa      	LDD  R26,Y+2
000103 81bb      	LDD  R27,Y+2+1
000104 9612      	ADIW R26,2
000105 940e 03db 	CALL __GETW1P
000107 9730      	SBIW R30,0
000108 f159      	BREQ _0x2000010
000109 81aa      	LDD  R26,Y+2
00010a 81bb      	LDD  R27,Y+2+1
00010b 9614      	ADIW R26,4
00010c 940e 03db 	CALL __GETW1P
00010e 018f      	MOVW R16,R30
00010f 9730      	SBIW R30,0
000110 f061      	BREQ _0x2000012
                +
000111 3002     +CPI R16 , LOW ( 2 )
000112 e0e0     +LDI R30 , HIGH ( 2 )
000113 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000114 f098      	BRLO _0x2000013
000115 01f8      	MOVW R30,R16
000116 9731      	SBIW R30,1
000117 018f      	MOVW R16,R30
                +
000118 81aa     +LDD R26 , Y + 2
000119 81bb     +LDD R27 , Y + 2 + 1
00011a 9614     +ADIW R26 , 4
00011b 93ed     +ST X + , R30
00011c 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000012:
00011d 81aa      	LDD  R26,Y+2
00011e 81bb      	LDD  R27,Y+2+1
00011f 9612      	ADIW R26,2
000120 91ed      	LD   R30,X+
000121 91fd      	LD   R31,X+
000122 9631      	ADIW R30,1
000123 93fe      	ST   -X,R31
000124 93ee      	ST   -X,R30
000125 9731      	SBIW R30,1
000126 81ac      	LDD  R26,Y+4
000127 83a0      	STD  Z+0,R26
                 _0x2000013:
000128 81aa      	LDD  R26,Y+2
000129 81bb      	LDD  R27,Y+2+1
00012a 940e 03db 	CALL __GETW1P
00012c 23ff      	TST  R31
00012d f02a      	BRMI _0x2000014
00012e 91ed      	LD   R30,X+
00012f 91fd      	LD   R31,X+
000130 9631      	ADIW R30,1
000131 93fe      	ST   -X,R31
000132 93ee      	ST   -X,R30
                 _0x2000014:
000133 c006      	RJMP _0x2000015
                 _0x2000010:
000134 81aa      	LDD  R26,Y+2
000135 81bb      	LDD  R27,Y+2+1
000136 efef      	LDI  R30,LOW(65535)
000137 efff      	LDI  R31,HIGH(65535)
000138 93ed      	ST   X+,R30
000139 93fc      	ST   X,R31
                 _0x2000015:
00013a 8119      	LDD  R17,Y+1
00013b 8108      	LDD  R16,Y+0
00013c 9625      	ADIW R28,5
00013d 9508      	RET
                 ; .FEND
                 __print_G100:
                 ; .FSTART __print_G100
00013e 93ba      	ST   -Y,R27
00013f 93aa      	ST   -Y,R26
000140 9726      	SBIW R28,6
000141 940e 03e8 	CALL __SAVELOCR6
000143 e010      	LDI  R17,0
000144 85ac      	LDD  R26,Y+12
000145 85bd      	LDD  R27,Y+12+1
000146 e0e0      	LDI  R30,LOW(0)
000147 e0f0      	LDI  R31,HIGH(0)
000148 93ed      	ST   X+,R30
000149 93fc      	ST   X,R31
                 _0x2000016:
00014a 89ea      	LDD  R30,Y+18
00014b 89fb      	LDD  R31,Y+18+1
00014c 9631      	ADIW R30,1
00014d 8bea      	STD  Y+18,R30
00014e 8bfb      	STD  Y+18+1,R31
00014f 9731      	SBIW R30,1
000150 91e4      	LPM  R30,Z
000151 2f2e      	MOV  R18,R30
000152 30e0      	CPI  R30,0
000153 f409      	BRNE PC+2
000154 c115      	RJMP _0x2000018
000155 2fe1      	MOV  R30,R17
000156 30e0      	CPI  R30,0
000157 f439      	BRNE _0x200001C
000158 3225      	CPI  R18,37
000159 f411      	BRNE _0x200001D
00015a e011      	LDI  R17,LOW(1)
00015b c002      	RJMP _0x200001E
                 _0x200001D:
00015c 940e 038a 	CALL SUBOPT_0x1
                 _0x200001E:
00015e c10a      	RJMP _0x200001B
                 _0x200001C:
00015f 30e1      	CPI  R30,LOW(0x1)
000160 f4a9      	BRNE _0x200001F
000161 3225      	CPI  R18,37
000162 f419      	BRNE _0x2000020
000163 940e 038a 	CALL SUBOPT_0x1
000165 c102      	RJMP _0x20000CC
                 _0x2000020:
000166 e012      	LDI  R17,LOW(2)
000167 e040      	LDI  R20,LOW(0)
000168 e000      	LDI  R16,LOW(0)
000169 322d      	CPI  R18,45
00016a f411      	BRNE _0x2000021
00016b e001      	LDI  R16,LOW(1)
00016c c0fc      	RJMP _0x200001B
                 _0x2000021:
00016d 322b      	CPI  R18,43
00016e f411      	BRNE _0x2000022
00016f e24b      	LDI  R20,LOW(43)
000170 c0f8      	RJMP _0x200001B
                 _0x2000022:
000171 3220      	CPI  R18,32
000172 f411      	BRNE _0x2000023
000173 e240      	LDI  R20,LOW(32)
000174 c0f4      	RJMP _0x200001B
                 _0x2000023:
000175 c002      	RJMP _0x2000024
                 _0x200001F:
000176 30e2      	CPI  R30,LOW(0x2)
000177 f439      	BRNE _0x2000025
                 _0x2000024:
000178 e050      	LDI  R21,LOW(0)
000179 e013      	LDI  R17,LOW(3)
00017a 3320      	CPI  R18,48
00017b f411      	BRNE _0x2000026
00017c 6800      	ORI  R16,LOW(128)
00017d c0eb      	RJMP _0x200001B
                 _0x2000026:
00017e c003      	RJMP _0x2000027
                 _0x2000025:
00017f 30e3      	CPI  R30,LOW(0x3)
000180 f009      	BREQ PC+2
000181 c0e7      	RJMP _0x200001B
                 _0x2000027:
000182 3320      	CPI  R18,48
000183 f010      	BRLO _0x200002A
000184 332a      	CPI  R18,58
000185 f008      	BRLO _0x200002B
                 _0x200002A:
000186 c007      	RJMP _0x2000029
                 _0x200002B:
000187 e0aa      	LDI  R26,LOW(10)
000188 9f5a      	MUL  R21,R26
000189 2d50      	MOV  R21,R0
00018a 2fe2      	MOV  R30,R18
00018b 53e0      	SUBI R30,LOW(48)
00018c 0f5e      	ADD  R21,R30
00018d c0db      	RJMP _0x200001B
                 _0x2000029:
00018e 2fe2      	MOV  R30,R18
00018f 36e3      	CPI  R30,LOW(0x63)
000190 f449      	BRNE _0x200002F
000191 940e 0391 	CALL SUBOPT_0x2
000193 89e8      	LDD  R30,Y+16
000194 89f9      	LDD  R31,Y+16+1
000195 81a4      	LDD  R26,Z+4
000196 93aa      	ST   -Y,R26
000197 940e 0397 	CALL SUBOPT_0x3
000199 c0ce      	RJMP _0x2000030
                 _0x200002F:
00019a 37e3      	CPI  R30,LOW(0x73)
00019b f441      	BRNE _0x2000032
00019c 940e 0391 	CALL SUBOPT_0x2
00019e 940e 039d 	CALL SUBOPT_0x4
0001a0 940e 0345 	CALL _strlen
0001a2 2f1e      	MOV  R17,R30
0001a3 c00a      	RJMP _0x2000033
                 _0x2000032:
0001a4 37e0      	CPI  R30,LOW(0x70)
0001a5 f461      	BRNE _0x2000035
0001a6 940e 0391 	CALL SUBOPT_0x2
0001a8 940e 039d 	CALL SUBOPT_0x4
0001aa 940e 0351 	CALL _strlenf
0001ac 2f1e      	MOV  R17,R30
0001ad 6008      	ORI  R16,LOW(8)
                 _0x2000033:
0001ae 6002      	ORI  R16,LOW(2)
0001af 770f      	ANDI R16,LOW(127)
0001b0 e030      	LDI  R19,LOW(0)
0001b1 c034      	RJMP _0x2000036
                 _0x2000035:
0001b2 36e4      	CPI  R30,LOW(0x64)
0001b3 f011      	BREQ _0x2000039
0001b4 36e9      	CPI  R30,LOW(0x69)
0001b5 f411      	BRNE _0x200003A
                 _0x2000039:
0001b6 6004      	ORI  R16,LOW(4)
0001b7 c002      	RJMP _0x200003B
                 _0x200003A:
0001b8 37e5      	CPI  R30,LOW(0x75)
0001b9 f431      	BRNE _0x200003C
                 _0x200003B:
0001ba e8ec      	LDI  R30,LOW(_tbl10_G100*2)
0001bb e0f0      	LDI  R31,HIGH(_tbl10_G100*2)
0001bc 83ee      	STD  Y+6,R30
0001bd 83ff      	STD  Y+6+1,R31
0001be e015      	LDI  R17,LOW(5)
0001bf c00c      	RJMP _0x200003D
                 _0x200003C:
0001c0 35e8      	CPI  R30,LOW(0x58)
0001c1 f411      	BRNE _0x200003F
0001c2 6008      	ORI  R16,LOW(8)
0001c3 c003      	RJMP _0x2000040
                 _0x200003F:
0001c4 37e8      	CPI  R30,LOW(0x78)
0001c5 f009      	BREQ PC+2
0001c6 c0a1      	RJMP _0x2000071
                 _0x2000040:
0001c7 e9e6      	LDI  R30,LOW(_tbl16_G100*2)
0001c8 e0f0      	LDI  R31,HIGH(_tbl16_G100*2)
0001c9 83ee      	STD  Y+6,R30
0001ca 83ff      	STD  Y+6+1,R31
0001cb e014      	LDI  R17,LOW(4)
                 _0x200003D:
0001cc ff02      	SBRS R16,2
0001cd c014      	RJMP _0x2000042
0001ce 940e 0391 	CALL SUBOPT_0x2
0001d0 940e 03a7 	CALL SUBOPT_0x5
0001d2 85ab      	LDD  R26,Y+11
0001d3 23aa      	TST  R26
0001d4 f43a      	BRPL _0x2000043
0001d5 85ea      	LDD  R30,Y+10
0001d6 85fb      	LDD  R31,Y+10+1
0001d7 940e 03d2 	CALL __ANEGW1
0001d9 87ea      	STD  Y+10,R30
0001da 87fb      	STD  Y+10+1,R31
0001db e24d      	LDI  R20,LOW(45)
                 _0x2000043:
0001dc 3040      	CPI  R20,0
0001dd f011      	BREQ _0x2000044
0001de 5f1f      	SUBI R17,-LOW(1)
0001df c001      	RJMP _0x2000045
                 _0x2000044:
0001e0 7f0b      	ANDI R16,LOW(251)
                 _0x2000045:
0001e1 c004      	RJMP _0x2000046
                 _0x2000042:
0001e2 940e 0391 	CALL SUBOPT_0x2
0001e4 940e 03a7 	CALL SUBOPT_0x5
                 _0x2000046:
                 _0x2000036:
0001e6 fd00      	SBRC R16,0
0001e7 c011      	RJMP _0x2000047
                 _0x2000048:
0001e8 1715      	CP   R17,R21
0001e9 f478      	BRSH _0x200004A
0001ea ff07      	SBRS R16,7
0001eb c008      	RJMP _0x200004B
0001ec ff02      	SBRS R16,2
0001ed c004      	RJMP _0x200004C
0001ee 7f0b      	ANDI R16,LOW(251)
0001ef 2f24      	MOV  R18,R20
0001f0 5011      	SUBI R17,LOW(1)
0001f1 c001      	RJMP _0x200004D
                 _0x200004C:
0001f2 e320      	LDI  R18,LOW(48)
                 _0x200004D:
0001f3 c001      	RJMP _0x200004E
                 _0x200004B:
0001f4 e220      	LDI  R18,LOW(32)
                 _0x200004E:
0001f5 940e 038a 	CALL SUBOPT_0x1
0001f7 5051      	SUBI R21,LOW(1)
0001f8 cfef      	RJMP _0x2000048
                 _0x200004A:
                 _0x2000047:
0001f9 2f31      	MOV  R19,R17
0001fa ff01      	SBRS R16,1
0001fb c017      	RJMP _0x200004F
                 _0x2000050:
0001fc 3030      	CPI  R19,0
0001fd f0a1      	BREQ _0x2000052
0001fe ff03      	SBRS R16,3
0001ff c006      	RJMP _0x2000053
000200 81ee      	LDD  R30,Y+6
000201 81ff      	LDD  R31,Y+6+1
000202 9125      	LPM  R18,Z+
000203 83ee      	STD  Y+6,R30
000204 83ff      	STD  Y+6+1,R31
000205 c005      	RJMP _0x2000054
                 _0x2000053:
000206 81ae      	LDD  R26,Y+6
000207 81bf      	LDD  R27,Y+6+1
000208 912d      	LD   R18,X+
000209 83ae      	STD  Y+6,R26
00020a 83bf      	STD  Y+6+1,R27
                 _0x2000054:
00020b 940e 038a 	CALL SUBOPT_0x1
00020d 3050      	CPI  R21,0
00020e f009      	BREQ _0x2000055
00020f 5051      	SUBI R21,LOW(1)
                 _0x2000055:
000210 5031      	SUBI R19,LOW(1)
000211 cfea      	RJMP _0x2000050
                 _0x2000052:
000212 c04b      	RJMP _0x2000056
                 _0x200004F:
                 _0x2000058:
000213 e320      	LDI  R18,LOW(48)
000214 81ee      	LDD  R30,Y+6
000215 81ff      	LDD  R31,Y+6+1
000216 940e 03df 	CALL __GETW1PF
000218 87e8      	STD  Y+8,R30
000219 87f9      	STD  Y+8+1,R31
00021a 81ee      	LDD  R30,Y+6
00021b 81ff      	LDD  R31,Y+6+1
00021c 9632      	ADIW R30,2
00021d 83ee      	STD  Y+6,R30
00021e 83ff      	STD  Y+6+1,R31
                 _0x200005A:
00021f 85e8      	LDD  R30,Y+8
000220 85f9      	LDD  R31,Y+8+1
000221 85aa      	LDD  R26,Y+10
000222 85bb      	LDD  R27,Y+10+1
000223 17ae      	CP   R26,R30
000224 07bf      	CPC  R27,R31
000225 f050      	BRLO _0x200005C
000226 5f2f      	SUBI R18,-LOW(1)
000227 85a8      	LDD  R26,Y+8
000228 85b9      	LDD  R27,Y+8+1
000229 85ea      	LDD  R30,Y+10
00022a 85fb      	LDD  R31,Y+10+1
00022b 1bea      	SUB  R30,R26
00022c 0bfb      	SBC  R31,R27
00022d 87ea      	STD  Y+10,R30
00022e 87fb      	STD  Y+10+1,R31
00022f cfef      	RJMP _0x200005A
                 _0x200005C:
000230 332a      	CPI  R18,58
000231 f028      	BRLO _0x200005D
000232 ff03      	SBRS R16,3
000233 c002      	RJMP _0x200005E
000234 5f29      	SUBI R18,-LOW(7)
000235 c001      	RJMP _0x200005F
                 _0x200005E:
000236 5d29      	SUBI R18,-LOW(39)
                 _0x200005F:
                 _0x200005D:
000237 fd04      	SBRC R16,4
000238 c01a      	RJMP _0x2000061
000239 3321      	CPI  R18,49
00023a f420      	BRSH _0x2000063
00023b 85a8      	LDD  R26,Y+8
00023c 85b9      	LDD  R27,Y+8+1
00023d 9711      	SBIW R26,1
00023e f409      	BRNE _0x2000062
                 _0x2000063:
00023f c009      	RJMP _0x20000CD
                 _0x2000062:
000240 1753      	CP   R21,R19
000241 f010      	BRLO _0x2000067
000242 ff00      	SBRS R16,0
000243 c001      	RJMP _0x2000068
                 _0x2000067:
000244 c013      	RJMP _0x2000066
                 _0x2000068:
000245 e220      	LDI  R18,LOW(32)
000246 ff07      	SBRS R16,7
000247 c00b      	RJMP _0x2000069
000248 e320      	LDI  R18,LOW(48)
                 _0x20000CD:
000249 6100      	ORI  R16,LOW(16)
00024a ff02      	SBRS R16,2
00024b c007      	RJMP _0x200006A
00024c 7f0b      	ANDI R16,LOW(251)
00024d 934a      	ST   -Y,R20
00024e 940e 0397 	CALL SUBOPT_0x3
000250 3050      	CPI  R21,0
000251 f009      	BREQ _0x200006B
000252 5051      	SUBI R21,LOW(1)
                 _0x200006B:
                 _0x200006A:
                 _0x2000069:
                 _0x2000061:
000253 940e 038a 	CALL SUBOPT_0x1
000255 3050      	CPI  R21,0
000256 f009      	BREQ _0x200006C
000257 5051      	SUBI R21,LOW(1)
                 _0x200006C:
                 _0x2000066:
000258 5031      	SUBI R19,LOW(1)
000259 85a8      	LDD  R26,Y+8
00025a 85b9      	LDD  R27,Y+8+1
00025b 9712      	SBIW R26,2
00025c f008      	BRLO _0x2000059
00025d cfb5      	RJMP _0x2000058
                 _0x2000059:
                 _0x2000056:
00025e ff00      	SBRS R16,0
00025f c008      	RJMP _0x200006D
                 _0x200006E:
000260 3050      	CPI  R21,0
000261 f031      	BREQ _0x2000070
000262 5051      	SUBI R21,LOW(1)
000263 e2e0      	LDI  R30,LOW(32)
000264 93ea      	ST   -Y,R30
000265 940e 0397 	CALL SUBOPT_0x3
000267 cff8      	RJMP _0x200006E
                 _0x2000070:
                 _0x200006D:
                 _0x2000071:
                 _0x2000030:
                 _0x20000CC:
000268 e010      	LDI  R17,LOW(0)
                 _0x200001B:
000269 cee0      	RJMP _0x2000016
                 _0x2000018:
00026a 85ac      	LDD  R26,Y+12
00026b 85bd      	LDD  R27,Y+12+1
00026c 940e 03db 	CALL __GETW1P
00026e 940e 03ef 	CALL __LOADLOCR6
000270 9664      	ADIW R28,20
000271 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
000272 92ff      	PUSH R15
000273 2ef8      	MOV  R15,R24
000274 9726      	SBIW R28,6
000275 940e 03ea 	CALL __SAVELOCR4
000277 940e 03af 	CALL SUBOPT_0x6
000279 9730      	SBIW R30,0
00027a f419      	BRNE _0x2000072
00027b efef      	LDI  R30,LOW(65535)
00027c efff      	LDI  R31,HIGH(65535)
00027d c023      	RJMP _0x20C0002
                 _0x2000072:
00027e 01de      	MOVW R26,R28
00027f 9616      	ADIW R26,6
000280 940e 03ce 	CALL __ADDW2R15
000282 018d      	MOVW R16,R26
000283 940e 03af 	CALL SUBOPT_0x6
000285 83ee      	STD  Y+6,R30
000286 83ff      	STD  Y+6+1,R31
000287 e0e0      	LDI  R30,LOW(0)
000288 87e8      	STD  Y+8,R30
000289 87e9      	STD  Y+8+1,R30
00028a 01de      	MOVW R26,R28
00028b 961a      	ADIW R26,10
00028c 940e 03ce 	CALL __ADDW2R15
00028e 940e 03db 	CALL __GETW1P
000290 93fa      	ST   -Y,R31
000291 93ea      	ST   -Y,R30
000292 931a      	ST   -Y,R17
000293 930a      	ST   -Y,R16
000294 efee      	LDI  R30,LOW(_put_buff_G100)
000295 e0f0      	LDI  R31,HIGH(_put_buff_G100)
000296 93fa      	ST   -Y,R31
000297 93ea      	ST   -Y,R30
000298 01de      	MOVW R26,R28
000299 961a      	ADIW R26,10
00029a dea3      	RCALL __print_G100
00029b 019f      	MOVW R18,R30
00029c 81ae      	LDD  R26,Y+6
00029d 81bf      	LDD  R27,Y+6+1
00029e e0e0      	LDI  R30,LOW(0)
00029f 93ec      	ST   X,R30
0002a0 01f9      	MOVW R30,R18
                 _0x20C0002:
0002a1 940e 03f1 	CALL __LOADLOCR4
0002a3 962a      	ADIW R28,10
0002a4 90ff      	POP  R15
0002a5 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.DSEG
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G102:
                 ; .FSTART __lcd_write_nibble_G102
0002a6 93aa      	ST   -Y,R26
0002a7 81e8      	LD   R30,Y
0002a8 71e0      	ANDI R30,LOW(0x10)
0002a9 f011      	BREQ _0x2040004
0002aa 9adb      	SBI  0x1B,3
0002ab c001      	RJMP _0x2040005
                 _0x2040004:
0002ac 98db      	CBI  0x1B,3
                 _0x2040005:
0002ad 81e8      	LD   R30,Y
0002ae 72e0      	ANDI R30,LOW(0x20)
0002af f011      	BREQ _0x2040006
0002b0 9adc      	SBI  0x1B,4
0002b1 c001      	RJMP _0x2040007
                 _0x2040006:
0002b2 98dc      	CBI  0x1B,4
                 _0x2040007:
0002b3 81e8      	LD   R30,Y
0002b4 74e0      	ANDI R30,LOW(0x40)
0002b5 f011      	BREQ _0x2040008
0002b6 9add      	SBI  0x1B,5
0002b7 c001      	RJMP _0x2040009
                 _0x2040008:
0002b8 98dd      	CBI  0x1B,5
                 _0x2040009:
0002b9 81e8      	LD   R30,Y
0002ba 78e0      	ANDI R30,LOW(0x80)
0002bb f011      	BREQ _0x204000A
0002bc 9ade      	SBI  0x1B,6
0002bd c001      	RJMP _0x204000B
                 _0x204000A:
0002be 98de      	CBI  0x1B,6
                 _0x204000B:
                +
0002bf e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0002c0 958a     +DEC R24
0002c1 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0002c2 9ada      	SBI  0x1B,2
                +
0002c3 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0002c4 958a     +DEC R24
0002c5 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0002c6 98da      	CBI  0x1B,2
                +
0002c7 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0002c8 958a     +DEC R24
0002c9 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0002ca c078      	RJMP _0x20C0001
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
0002cb 93aa      	ST   -Y,R26
0002cc 81a8      	LD   R26,Y
0002cd dfd8      	RCALL __lcd_write_nibble_G102
0002ce 81e8          ld    r30,y
0002cf 95e2          swap  r30
0002d0 83e8          st    y,r30
0002d1 81a8      	LD   R26,Y
0002d2 dfd3      	RCALL __lcd_write_nibble_G102
                +
0002d3 e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
0002d4 958a     +DEC R24
0002d5 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
0002d6 c06c      	RJMP _0x20C0001
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
0002d7 93aa      	ST   -Y,R26
0002d8 81e8      	LD   R30,Y
0002d9 e0f0      	LDI  R31,0
0002da 5dea      	SUBI R30,LOW(-__base_y_G102)
0002db 4ffa      	SBCI R31,HIGH(-__base_y_G102)
0002dc 81e0      	LD   R30,Z
0002dd 81a9      	LDD  R26,Y+1
0002de 0fae      	ADD  R26,R30
0002df dfeb      	RCALL __lcd_write_data
0002e0 8059      	LDD  R5,Y+1
0002e1 8048      	LDD  R4,Y+0
0002e2 9622      	ADIW R28,2
0002e3 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
0002e4 e0a2      	LDI  R26,LOW(2)
0002e5 940e 03b6 	CALL SUBOPT_0x7
0002e7 e0ac      	LDI  R26,LOW(12)
0002e8 dfe2      	RCALL __lcd_write_data
0002e9 e0a1      	LDI  R26,LOW(1)
0002ea 940e 03b6 	CALL SUBOPT_0x7
0002ec e0e0      	LDI  R30,LOW(0)
0002ed 2e4e      	MOV  R4,R30
0002ee 2e5e      	MOV  R5,R30
0002ef 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
0002f0 93aa      	ST   -Y,R26
0002f1 81a8      	LD   R26,Y
0002f2 30aa      	CPI  R26,LOW(0xA)
0002f3 f011      	BREQ _0x2040011
0002f4 1457      	CP   R5,R7
0002f5 f048      	BRLO _0x2040010
                 _0x2040011:
0002f6 e0e0      	LDI  R30,LOW(0)
0002f7 93ea      	ST   -Y,R30
0002f8 9443      	INC  R4
0002f9 2da4      	MOV  R26,R4
0002fa dfdc      	RCALL _lcd_gotoxy
0002fb 81a8      	LD   R26,Y
0002fc 30aa      	CPI  R26,LOW(0xA)
0002fd f409      	BRNE _0x2040013
0002fe c044      	RJMP _0x20C0001
                 _0x2040013:
                 _0x2040010:
0002ff 9453      	INC  R5
000300 9ad8      	SBI  0x1B,0
000301 81a8      	LD   R26,Y
000302 dfc8      	RCALL __lcd_write_data
000303 98d8      	CBI  0x1B,0
000304 c03e      	RJMP _0x20C0001
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
000305 93ba      	ST   -Y,R27
000306 93aa      	ST   -Y,R26
000307 931a      	ST   -Y,R17
                 _0x2040014:
000308 81a9      	LDD  R26,Y+1
000309 81ba      	LDD  R27,Y+1+1
00030a 91ed      	LD   R30,X+
00030b 83a9      	STD  Y+1,R26
00030c 83ba      	STD  Y+1+1,R27
00030d 2f1e      	MOV  R17,R30
00030e 30e0      	CPI  R30,0
00030f f019      	BREQ _0x2040016
000310 2fa1      	MOV  R26,R17
000311 dfde      	RCALL _lcd_putchar
000312 cff5      	RJMP _0x2040014
                 _0x2040016:
000313 8118      	LDD  R17,Y+0
000314 9623      	ADIW R28,3
000315 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
000316 93aa      	ST   -Y,R26
000317 9ad3      	SBI  0x1A,3
000318 9ad4      	SBI  0x1A,4
000319 9ad5      	SBI  0x1A,5
00031a 9ad6      	SBI  0x1A,6
00031b 9ad2      	SBI  0x1A,2
00031c 9ad0      	SBI  0x1A,0
00031d 9ad1      	SBI  0x1A,1
00031e 98da      	CBI  0x1B,2
00031f 98d8      	CBI  0x1B,0
000320 98d9      	CBI  0x1B,1
000321 8078      	LDD  R7,Y+0
000322 81e8      	LD   R30,Y
000323 58e0      	SUBI R30,-LOW(128)
                +
000324 93e0 0528+STS __base_y_G102 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G102,2
000326 81e8      	LD   R30,Y
000327 54e0      	SUBI R30,-LOW(192)
                +
000328 93e0 0529+STS __base_y_G102 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G102,3
00032a e1a4      	LDI  R26,LOW(20)
00032b e0b0      	LDI  R27,0
00032c 940e 03c4 	CALL _delay_ms
00032e 940e 03bc 	CALL SUBOPT_0x8
000330 940e 03bc 	CALL SUBOPT_0x8
000332 940e 03bc 	CALL SUBOPT_0x8
000334 e2a0      	LDI  R26,LOW(32)
000335 df70      	RCALL __lcd_write_nibble_G102
                +
000336 ec88     +LDI R24 , LOW ( 200 )
000337 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000338 9701     +SBIW R24 , 1
000339 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
00033a e2a8      	LDI  R26,LOW(40)
00033b df8f      	RCALL __lcd_write_data
00033c e0a4      	LDI  R26,LOW(4)
00033d df8d      	RCALL __lcd_write_data
00033e e8a5      	LDI  R26,LOW(133)
00033f df8b      	RCALL __lcd_write_data
000340 e0a6      	LDI  R26,LOW(6)
000341 df89      	RCALL __lcd_write_data
000342 dfa1      	RCALL _lcd_clear
                 _0x20C0001:
000343 9621      	ADIW R28,1
000344 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
000345 93ba      	ST   -Y,R27
000346 93aa      	ST   -Y,R26
000347 91a9          ld   r26,y+
000348 91b9          ld   r27,y+
000349 27ee          clr  r30
00034a 27ff          clr  r31
                 strlen0:
00034b 916d          ld   r22,x+
00034c 2366          tst  r22
00034d f011          breq strlen1
00034e 9631          adiw r30,1
00034f cffb          rjmp strlen0
                 strlen1:
000350 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
000351 93ba      	ST   -Y,R27
000352 93aa      	ST   -Y,R26
000353 27aa          clr  r26
000354 27bb          clr  r27
000355 91e9          ld   r30,y+
000356 91f9          ld   r31,y+
                 strlenf0:
000357 9005      	lpm  r0,z+
000358 2000          tst  r0
000359 f011          breq strlenf1
00035a 9611          adiw r26,1
00035b cffb          rjmp strlenf0
                 strlenf1:
00035c 01fd          movw r30,r26
00035d 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 
                 	.DSEG
                 _keypad:
000500           	.BYTE 0x12
                 _data:
000512           	.BYTE 0x10
                 __seed_G101:
000522           	.BYTE 0x4
                 __base_y_G102:
000526           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:81 WORDS
                 SUBOPT_0x0:
00035e e0e0      	LDI  R30,LOW(0)
00035f 93ea      	ST   -Y,R30
000360 e0a0      	LDI  R26,LOW(0)
000361 940e 02d7 	CALL _lcd_gotoxy
000363 e1e2      	LDI  R30,LOW(_data)
000364 e0f5      	LDI  R31,HIGH(_data)
000365 93fa      	ST   -Y,R31
000366 93ea      	ST   -Y,R30
                +
000367 ebe0     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
000368 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
000369 93fa      	ST   -Y,R31
00036a 93ea      	ST   -Y,R30
                +
00036b e0a6     +LDI R26 , 6
00036c 9fa2     +MUL R26 , R18
00036d 01f0     +MOVW R30 , R0
00036e 9fa3     +MUL R26 , R19
00036f 0df0     +ADD R31 , R0
                 	__MULBNWRU 18,19,6
000370 50e0      	SUBI R30,LOW(-_keypad)
000371 4ffb      	SBCI R31,HIGH(-_keypad)
000372 01df      	MOVW R26,R30
000373 01fa      	MOVW R30,R20
000374 0fee      	LSL  R30
000375 1fff      	ROL  R31
000376 0fae      	ADD  R26,R30
000377 1fbf      	ADC  R27,R31
000378 940e 03db 	CALL __GETW1P
00037a 940e 03d6 	CALL __CWD1
00037c 940e 03e3 	CALL __PUTPARD1
00037e e084      	LDI  R24,4
00037f 940e 0272 	CALL _sprintf
000381 9628      	ADIW R28,8
000382 e1a2      	LDI  R26,LOW(_data)
000383 e0b5      	LDI  R27,HIGH(_data)
000384 940e 0305 	CALL _lcd_puts
000386 efa4      	LDI  R26,LOW(500)
000387 e0b1      	LDI  R27,HIGH(500)
000388 940c 03c4 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x1:
00038a 932a      	ST   -Y,R18
00038b 85ad      	LDD  R26,Y+13
00038c 85be      	LDD  R27,Y+13+1
00038d 85ef      	LDD  R30,Y+15
00038e 89f8      	LDD  R31,Y+15+1
00038f 9509      	ICALL
000390 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2:
000391 89e8      	LDD  R30,Y+16
000392 89f9      	LDD  R31,Y+16+1
000393 9734      	SBIW R30,4
000394 8be8      	STD  Y+16,R30
000395 8bf9      	STD  Y+16+1,R31
000396 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3:
000397 85ad      	LDD  R26,Y+13
000398 85be      	LDD  R27,Y+13+1
000399 85ef      	LDD  R30,Y+15
00039a 89f8      	LDD  R31,Y+15+1
00039b 9509      	ICALL
00039c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x4:
00039d 89a8      	LDD  R26,Y+16
00039e 89b9      	LDD  R27,Y+16+1
00039f 9614      	ADIW R26,4
0003a0 940e 03db 	CALL __GETW1P
0003a2 83ee      	STD  Y+6,R30
0003a3 83ff      	STD  Y+6+1,R31
0003a4 81ae      	LDD  R26,Y+6
0003a5 81bf      	LDD  R27,Y+6+1
0003a6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x5:
0003a7 89a8      	LDD  R26,Y+16
0003a8 89b9      	LDD  R27,Y+16+1
0003a9 9614      	ADIW R26,4
0003aa 940e 03db 	CALL __GETW1P
0003ac 87ea      	STD  Y+10,R30
0003ad 87fb      	STD  Y+10+1,R31
0003ae 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6:
0003af 01de      	MOVW R26,R28
0003b0 961c      	ADIW R26,12
0003b1 940e 03ce 	CALL __ADDW2R15
0003b3 940e 03db 	CALL __GETW1P
0003b5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
0003b6 940e 02cb 	CALL __lcd_write_data
0003b8 e0a3      	LDI  R26,LOW(3)
0003b9 e0b0      	LDI  R27,0
0003ba 940c 03c4 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x8:
0003bc e3a0      	LDI  R26,LOW(48)
0003bd 940e 02a6 	CALL __lcd_write_nibble_G102
                +
0003bf ec88     +LDI R24 , LOW ( 200 )
0003c0 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
0003c1 9701     +SBIW R24 , 1
0003c2 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
0003c3 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
0003c4 9610      	adiw r26,0
0003c5 f039      	breq __delay_ms1
                 __delay_ms0:
                +
0003c6 ed80     +LDI R24 , LOW ( 0x7D0 )
0003c7 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
0003c8 9701     +SBIW R24 , 1
0003c9 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
0003ca 95a8      	wdr
0003cb 9711      	sbiw r26,1
0003cc f7c9      	brne __delay_ms0
                 __delay_ms1:
0003cd 9508      	ret
                 
                 __ADDW2R15:
0003ce 2400      	CLR  R0
0003cf 0daf      	ADD  R26,R15
0003d0 1db0      	ADC  R27,R0
0003d1 9508      	RET
                 
                 __ANEGW1:
0003d2 95f1      	NEG  R31
0003d3 95e1      	NEG  R30
0003d4 40f0      	SBCI R31,0
0003d5 9508      	RET
                 
                 __CWD1:
0003d6 2f6f      	MOV  R22,R31
0003d7 0f66      	ADD  R22,R22
0003d8 0b66      	SBC  R22,R22
0003d9 2f76      	MOV  R23,R22
0003da 9508      	RET
                 
                 __GETW1P:
0003db 91ed      	LD   R30,X+
0003dc 91fc      	LD   R31,X
0003dd 9711      	SBIW R26,1
0003de 9508      	RET
                 
                 __GETW1PF:
0003df 9005      	LPM  R0,Z+
0003e0 91f4      	LPM  R31,Z
0003e1 2de0      	MOV  R30,R0
0003e2 9508      	RET
                 
                 __PUTPARD1:
0003e3 937a      	ST   -Y,R23
0003e4 936a      	ST   -Y,R22
0003e5 93fa      	ST   -Y,R31
0003e6 93ea      	ST   -Y,R30
0003e7 9508      	RET
                 
                 __SAVELOCR6:
0003e8 935a      	ST   -Y,R21
                 __SAVELOCR5:
0003e9 934a      	ST   -Y,R20
                 __SAVELOCR4:
0003ea 933a      	ST   -Y,R19
                 __SAVELOCR3:
0003eb 932a      	ST   -Y,R18
                 __SAVELOCR2:
0003ec 931a      	ST   -Y,R17
0003ed 930a      	ST   -Y,R16
0003ee 9508      	RET
                 
                 __LOADLOCR6:
0003ef 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0003f0 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0003f1 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0003f2 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0003f3 8119      	LDD  R17,Y+1
0003f4 8108      	LD   R16,Y
0003f5 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega128 register use summary:
r0 :  17 r1 :   1 r2 :   0 r3 :   0 r4 :   4 r5 :   4 r6 :   0 r7 :   2 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  34 r17:  30 r18:  36 r19:  15 r20:  16 r21:  23 r22:  11 r23:   2 
r24:  24 r25:   5 r26: 101 r27:  40 r28:  15 r29:   1 r30: 185 r31:  70 
x  :  23 y  : 169 z  :  15 
Registers used: 25 out of 35 (71.4%)

ATmega128 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   2 add   :   6 
adiw  :  25 and   :   0 andi  :  11 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  24 
brge  :   1 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   8 
brlt  :   1 brmi  :   1 brne  :  36 brpl  :   1 brsh  :   2 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :  59 
cbi   :   9 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :   7 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   8 cpc   :   8 cpi   :  38 cpse  :   0 dec   :   5 des   :   0 
elpm  :   0 eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 
ijmp  :   0 in    :   3 inc   :   2 jmp   :  38 ld    :  28 ldd   :  77 
ldi   : 110 lds   :   0 lpm   :  14 lsl   :   1 lsr   :   0 mov   :  23 
movw  :  17 mul   :   3 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 
or    :   2 ori   :   6 out   :   8 pop   :   1 push  :   1 rcall :  15 
ret   :  26 reti  :   0 rjmp  :  66 rol   :   1 ror   :   0 sbc   :   2 
sbci  :   5 sbi   :  13 sbic  :   0 sbis  :   0 sbiw  :  19 sbr   :   0 
sbrc  :   2 sbrs  :  10 sec   :   0 seh   :   0 sei   :   0 sen   :   0 
ser   :   0 ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 
spm   :   0 st    :  59 std   :  31 sts   :   8 sub   :   1 subi  :  19 
swap  :   1 tst   :   4 wdr   :   1 
Instructions used: 56 out of 117 (47.9%)

ATmega128 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0007ec   1954     74   2028  131072   1.5%
[.dseg] 0x000100 0x00052a      0     42     42    4096   1.0%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 7 warnings
